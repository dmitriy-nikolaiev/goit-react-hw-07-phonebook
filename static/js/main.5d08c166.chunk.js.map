{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axios","defaults","baseURL","getLoading","getFilter","getContacts","getFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","number","addContact","newContact","props","find","contact","alert","onAddContact","setState","changeHandler","e","target","value","className","onSubmit","preventDefault","onChange","this","type","pattern","title","required","Component","connect","getContactsSelector","dispatch","a","post","data","deleteContact","delete","onClick","ContactList","fetchContacts","map","defaultProps","contactsSelectors","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d08c166.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n//\r\n// export const addContact = createAction('contacts/add');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\n//\r\n// export const deleteContact = createAction('contacts/delete');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n//\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n// const items = createReducer(initialState, {\r\n//   [actions.addContact]: (state, { payload }) => [...state, payload],\r\n//   [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n// });\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\n//\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const myMiddleware = (store) => (next) => (action) => {\r\n//   console.log(action, 'action My middleware');\r\n\r\n//   next(action);\r\n// };\r\n\r\n// const middleware = [...getDefaultMiddleware(), myMiddleware];\r\n\r\nconst middleware = [...getDefaultMiddleware()];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3001';\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n\r\n  // axios\r\n  //   .get('/contacts')\r\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  //   .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (newContact) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', newContact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n\r\n  // axios\r\n  //   .post('/contacts', newContact)\r\n  //   .then(({ data }) => dispatch(addContactSuccess(data)))\r\n  //   .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n\r\n  // axios\r\n  //   .delete(`/contacts/${Id}`)\r\n  //   .then(() => dispatch(deleteContactSuccess(Id)))\r\n  //   .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\n// export default  { fetchContacts, addContact, deleteContact }\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (items, filter) => {\r\n  return items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { addContact } from '..//..//redux/contacts/contacts-operations';\r\nimport { getContacts as getContactsSelector } from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  addContact = (newContact) => {\r\n    if (this.props.contacts.find((contact) => contact.name === newContact.name)) {\r\n      alert(`${newContact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    // newContact.id = uuidv4();\r\n    this.props.onAddContact(newContact);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"contact-form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          this.addContact({ ...this.state });\r\n        }}\r\n      >\r\n        <div className=\"form-container\">\r\n          <label className=\"form-label\">\r\n            Name\r\n            <input\r\n              onChange={this.changeHandler}\r\n              value={this.state.name}\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className=\"form-label\">\r\n            Number\r\n            <input\r\n              onChange={this.changeHandler}\r\n              value={this.state.number}\r\n              className=\"form-input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className=\"form-submit\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContactsSelector(state),\r\n});\r\n\r\n// const mapStateToProps = ({ contacts: { items } }) => ({\r\n//   contacts: items,\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddContact: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nContactForm.propTypes = { onAddContact: PropTypes.func };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '..//..//redux/contacts/contacts-selectors';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <label className=\"filter-label\">\r\n    Find contacts by name:\r\n    <input className=\"filter-input\" name=\"name\" value={filter} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: getFilter(state),\r\n});\r\n// const mapStateToProps = ({ contacts: { filter } }) => ({ filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst ContactListItem = ({ id, name, number, deleteContact }) => (\r\n  <li className=\"contact-list-item\">\r\n    <span className=\"contact-name\">{name}:</span>\r\n    <span className=\"contact-number\"> {number}</span>\r\n    <button className=\"contact-delete-btn\" onClick={() => deleteContact(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {};\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    // const { items, filter } = this.props;\r\n    const { items } = this.props;\r\n\r\n    return this.props.loading ? (\r\n      <div>Loading...</div>\r\n    ) : (\r\n      <ul className=\"contact-list\">\r\n        {items\r\n          // .filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase().trim()))\r\n          .map((contact) => {\r\n            return <ContactListItem key={contact.id} {...contact} />;\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactsSelectors.getFilteredContacts(state),\r\n    loading: contactsSelectors.getLoading(state),\r\n    // filter: contactsSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { items, filter } = state.contacts;\r\n//   return { items, filter };\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nContactList.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nContactList.propTypes = {\r\n  filter: PropTypes.string,\r\n  items: PropTypes.array.isRequired,\r\n  fetchContacts: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { Component } from 'react';\n\nimport './App.scss';\n\nimport ContactForm from './components/ContactForm/';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList/';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}